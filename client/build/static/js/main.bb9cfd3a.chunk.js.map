{"version":3,"sources":["components/Nav.jsx","components/NewActivity.jsx","components/EditActivity.jsx","components/Home.jsx","components/Register.jsx","components/Login.jsx","components/SignInView.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","to","src","alt","width","height","data-target","id","NewActivity","useState","type","setType","date","setDate","amount","setAmount","units","setUnits","errors","setErrors","onSubmit","e","preventDefault","activity","axios","post","withCredentials","then","res","data","navigate","catch","err","console","log","onChange","target","value","class","message","placeholder","step","style","EditActivity","useEffect","get","_id","put","moment","format","Home","activities","setActivities","fetchActivities","response","verified","isPast","Date","toDateString","remove","delete","filter","a","map","key","href","onClick","Register","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","user","loggedIn","Login","errorMessage","setErrorMessage","length","SignInView","App","marginTop","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.bb9cfd3a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from '@reach/router';\n\n\nconst Nav = props => {\n  return (\n    <nav className=\"navbar is-transparent\">\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"navbar-item\">\n          <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"Bulma\" width=\"112\" height=\"28\" />\n        </Link>\n        <div className=\"navbar-burger burger\" data-target=\"navbarExampleTransparentExample\">\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n\n      <div id=\"navbarExampleTransparentExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n          <Link to=\"/\" className=\"navbar-item\">\n            Home\n          </Link>\n          <Link to=\"/new\" className=\"navbar-item\">\n            New\n          </Link>\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"field is-grouped\">\n              <p className=\"control\">\n                <Link className=\"button is-info\" to=\"/sign_in\">Sign In</Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;","import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\n\nconst NewActivity = props => {\n\n  const [type, setType] = useState(\"Running\");\n  const [date, setDate] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [units, setUnits] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const addActivity = e => {\n    e.preventDefault();\n    const activity = {type, date, amount, units};\n    axios.post(\"http://localhost:8000/api/activities\", activity, {\n      withCredentials: true\n    })\n      .then( res => {\n        if(res.data.errors) {\n          setErrors(res.data.errors);\n        } else {\n          navigate(\"/\");\n        }\n      })\n      .catch( err => console.log(err) );\n  }\n\n  return (\n    <article className=\"message is-info\">\n      <div className=\"message-header\">\n        <p>Add Activity</p>\n      </div>\n      <div className=\"message-body\">\n        <form onSubmit={ addActivity }>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <label className=\"label\">Activity Type</label>\n              <div className=\"select\">\n                <select className=\"input\" onChange={e => setType(e.target.value)}>\n                  <option>Running</option>\n                  <option>Biking</option>\n                  <option>Swimming</option>\n                  <option>Yoga</option>\n                  <option>Rock Climbing</option>\n                  <option>Hiking</option>\n                </select>\n                {\n                  errors.type ? \n                  <p class=\"help is-danger\">{errors.type.message}</p> :\n                  \"\"\n                }\n              </div>\n            </div>\n            <div className=\"column\">  \n              <label className=\"label\">Amount</label>\n              <input type=\"number\" className=\"input\" placeholder=\"Amount\" step=\"0.1\" onChange={e => setAmount(e.target.value)} />\n              {\n                errors.amount ? \n                <p class=\"help is-danger\">{errors.amount.message}</p> :\n                \"\"\n              }\n\n            </div>\n          </div>\n          <div className=\"columns\">\n              <div className=\"column\">\n                <label className=\"label\">Date</label>\n                <input type=\"date\" className=\"input\" onChange={e => setDate(e.target.value+ \"T04:00:00Z\")}/>\n                {\n                  errors.date ? \n                  <p class=\"help is-danger\">{errors.date.message}</p> :\n                  \"\"\n                }\n              </div>\n              <div className=\"column\">\n                <label className=\"label\">Units</label>\n               <input type=\"units\" className=\"input\" placeholder=\"Units\" onChange={e => setUnits(e.target.value)}/>\n                {\n                  errors.units ? \n                  <p class=\"help is-danger\">{errors.units.message}</p> :\n                  \"\"\n                }\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <button style={{width: \"100%\"}} className=\"button is-primary is-outlined\" type=\"submit\">Submit</button>\n              </div>\n              <div className=\"column\">\n                <Link style={{width: \"100%\"}} to=\"/\" className=\"button is-danger is-outlined\">Cancel</Link>\n              </div>\n            </div>\n        </form>\n      </div>\n    </article>\n  )\n}\n\nexport default NewActivity;","import React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport moment from 'moment';\n\n\nconst EditActivity = props => {\n\n  const [type, setType] = useState(\"Running\");\n  const [date, setDate] = useState(\"2020-01-01\");\n  const [amount, setAmount] = useState(0);\n  const [units, setUnits] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const getActivity = () => {\n    axios.get(`http://localhost:8000/api/activities/${props._id}`, {\n      withCredentials: true\n    })\n      .then( res => {\n        console.log(res.data);\n        setType(res.data.type);\n        setDate(res.data.date);\n        setAmount(res.data.amount);\n        setUnits(res.data.units);\n      }).catch(err => console.log(err));\n  }\n\n  useEffect( () => {\n    getActivity();\n  }, []);\n\n  const updateActivity = e => {\n    e.preventDefault();\n    const activity = {type, date, amount, units};\n    axios.put(`http://localhost:8000/api/activities/${props._id}`, activity, {\n      withCredentials: true\n    })\n      .then( res => {\n        if(res.data.errors) {\n          setErrors(res.data.errors);\n        } else {\n          navigate(\"/\");\n        }\n      })\n      .catch( err => console.log(err) );\n  }\n\n  return (\n    <article className=\"message is-info\">\n      <div className=\"message-header\">\n        <p>Update Activity</p>\n      </div>\n      <div className=\"message-body\">\n        <form onSubmit={ updateActivity }>\n        <div className=\"columns\">\n            <div className=\"column\">\n              <label className=\"label\">Activity Type</label>\n              <div className=\"select\">\n                <select className=\"input\" onChange={e => setType(e.target.value)} value={type} >\n                  <option>Running</option>\n                  <option>Biking</option>\n                  <option>Swimming</option>\n                  <option>Yoga</option>\n                  <option>Rock Climbing</option>\n                  <option>Hiking</option>\n                </select>\n                {\n                  errors.type ? \n                  <p class=\"help is-danger\">{errors.type.message}</p> :\n                  \"\"\n                }\n              </div>\n            </div>\n            <div className=\"column\">  \n              <label className=\"label\">Amount</label>\n              <input type=\"number\" className=\"input\" placeholder=\"Amount\" step=\"0.1\" onChange={e => setAmount(e.target.value)} value={amount} />\n              {\n                errors.amount ? \n                <p class=\"help is-danger\">{errors.amount.message}</p> :\n                \"\"\n              }\n\n            </div>\n          </div>\n          <div className=\"columns\">\n              <div className=\"column\">\n                <label className=\"label\">Date</label>\n                <input type=\"date\" className=\"input\" onChange={e => setDate(e.target.value+ \"T04:00:00Z\")} value={moment(date).format(\"YYYY-MM-DD\")} />\n                {\n                  errors.date ? \n                  <p class=\"help is-danger\">{errors.date.message}</p> :\n                  \"\"\n                }\n              </div>\n              <div className=\"column\">\n                <label className=\"label\">Units</label>\n               <input type=\"units\" className=\"input\" placeholder=\"Units\" onChange={e => setUnits(e.target.value)} value={units} />\n                {\n                  errors.units ? \n                  <p class=\"help is-danger\">{errors.units.message}</p> :\n                  \"\"\n                }\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <button style={{width: \"100%\"}} className=\"button is-primary is-outlined\" type=\"submit\">Submit</button>\n              </div>\n              <div className=\"column\">\n                <Link style={{width: \"100%\"}} to=\"/\" className=\"button is-danger is-outlined\">Cancel</Link>\n              </div>\n            </div>\n        </form>\n      </div>\n    </article>\n  )\n}\n\nexport default EditActivity;","import React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport moment from 'moment';\n\n\nconst Home = props => {\n\n  const [activities, setActivities] = useState([]);\n\n  const fetchActivities = () => {\n    axios.get(\"http://localhost:8000/api/activities\", {\n      withCredentials: true\n    })\n      .then( res => setActivities(res.data) )\n      .catch( err => {\n        if(!err.response.data.verified) {\n          navigate(\"/sign_in\");\n        } else {\n          console.log(err);\n        }\n      });\n  }\n\n  useEffect( () => {\n    fetchActivities();\n  }, []);\n\n  function isPast(date) {\n    return new Date(date) < new Date( new Date().toDateString() );\n  }\n\n  const remove =_id => {\n    axios.delete(`http://localhost:8000/api/activities/${_id}`, {\n      withCredentials: true\n    })\n      .then( res => {\n        fetchActivities();\n      }).catch( err => console.log(err) );\n  }\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <h1 className=\"title\">Past activities</h1>\n        {\n          activities\n            .filter( a => isPast(a.date) )\n            .map( a => \n              <article className=\"message is-info\" key={a._id}>\n                <div className=\"message-header\">\n                  <p>{a.type}</p>\n                  <span>\n                    <Link to={\"/edit/\"+a._id}>Edit</Link>\n                    {\" | \"}\n                    <a href=\"#\" onClick={e => remove(a._id) }>Remove</a>\n                  </span>\n                </div>\n                <div className=\"message-body\">\n                  <p>On: {moment(a.date).format(\"MM/DD/YYYY\")}</p>\n                  <p>For: {a.amount} {a.units}</p>\n                </div>\n              </article>\n            )\n        }\n      </div>\n      <div className=\"column\">\n        <h1 className=\"title\">Today's Activities</h1>\n        {\n          activities\n            .filter( a => !isPast(a.date) )\n            .map( a => \n              <article className=\"message is-primary\" key={a._id}>\n                <div className=\"message-header\">\n                  <p>{a.type}</p>\n                  <span>\n                    <Link to={\"/edit/\"+a._id}>Edit</Link>\n                    {\" | \"}\n                    <a href=\"#\" onClick={e => remove(a._id) }>Remove</a>\n                  </span>\n                </div>\n                <div className=\"message-body\">\n                  <p>On: {moment(a.date).format(\"MM/DD/YYYY\")}</p>\n                  <p>For: {a.amount} {a.units}</p>\n                </div>\n              </article>\n            )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\n\nconst Register = props => {\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const register = e => {\n    e.preventDefault();\n    const user = { firstName, lastName, email, password, confirmPassword };\n    axios.post(\"http://localhost:8000/api/register\", user, {\n      withCredentials: true\n    })\n      .then( res => {\n        console.log(res);\n        if(res.data.loggedIn) {\n          navigate(\"/\");\n        } else {\n          setErrors(res.data.errors);\n        }\n      }).catch( err => console.log(err) );\n  }\n\n  return (\n    <article className=\"message is-info\">\n      <div className=\"message-header\">\n        <p>Register</p>\n      </div>\n      <div className=\"message-body\">\n        <form onSubmit={ register }>\n          <label className=\"label\">First Name</label>\n          <input type=\"text\" className=\"input\" onChange={e => setFirstName(e.target.value)} />\n          {\n            errors.firstName ? \n            <p class=\"help is-danger\">{errors.firstName.message}</p> :\n            \"\"\n          }\n          <label className=\"label\">Last Name</label>\n          <input type=\"text\" className=\"input\" onChange={e => setLastName(e.target.value)} />\n          {\n            errors.lastName ? \n            <p class=\"help is-danger\">{errors.lastName.message}</p> :\n            \"\"\n          }\n          <label className=\"label\">Email</label>\n          <input type=\"text\" className=\"input\" onChange={e => setEmail(e.target.value)} />\n          {\n            errors.email ? \n            <p class=\"help is-danger\">{errors.email.message}</p> :\n            \"\"\n          }\n          <label className=\"label\">Password</label>\n          <input type=\"password\" className=\"input\" onChange={e => setPassword(e.target.value)} />\n          {\n            errors.password ? \n            <p class=\"help is-danger\">{errors.password.message}</p> :\n            \"\"\n          }\n          <label className=\"label\">Confirm Password</label>\n          <input type=\"password\" className=\"input\" onChange={e => setConfirmPassword(e.target.value)} />\n          {\n            errors.confirmPassword ? \n            <p class=\"help is-danger\">{errors.confirmPassword.message}</p> :\n            \"\"\n          }\n          <br /><br /><br />\n          <button style={{width: \"100%\"}} className=\"button is-info\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </article>\n  );\n\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\n\nconst Login = props => {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const login = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/api/login\", {email, password}, {\n      withCredentials: true\n    })\n      .then( res => {\n        console.log(res);\n        if(res.data.loggedIn) {\n          navigate(\"/\");\n        } else {\n          setErrorMessage(\"Invalid login attempt!\");\n        }\n      }).catch( err => console.log(err) );\n  }\n\n  return (\n    <article className=\"message is-danger\">\n      <div className=\"message-header\">\n        <p>Login</p>\n      </div>\n      <div className=\"message-body\">\n        <form onSubmit={ login }>\n          <label className=\"label\">Email</label>\n          <input type=\"text\" className=\"input\" onChange={e => setEmail(e.target.value)} />\n          <label className=\"label\">Password</label>\n          <input type=\"password\" className=\"input\" onChange={e => setPassword(e.target.value)} />\n          <br /><br />\n          <button style={{width: \"100%\"}} className=\"button is-danger\" type=\"submit\">Submit</button>\n          {\n            errorMessage.length > 0 ? \n            <><br /><p className=\"is-danger\">{errorMessage}</p></> :\n            \"\"\n          }\n        </form>\n      </div>\n    </article>\n  );\n\n}\n\nexport default Login;","import React from 'react';\nimport Register from './Register';\nimport Login from './Login';\n\n\n\nconst SignInView = props => {\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <Register />\n      </div>\n      <div className=\"column\">\n        <Login />\n      </div>\n    </div>\n  );\n}\n\nexport default SignInView;","import React from 'react';\nimport { Router } from '@reach/router';\nimport Nav from './components/Nav';\nimport NewActivity from './components/NewActivity';\nimport EditActivity from './components/EditActivity';\nimport Home from './components/Home';\nimport SignInView from './components/SignInView';\n\n\nfunction App() {\n  return (\n    <>\n      <Nav />\n      <section className=\"hero is-dark\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Fitness Buddy</h1>\n            {/* <h2 className=\"subtitle\">...</h2> */}\n          </div>\n        </div>\n      </section>\n      <Router className=\"container\" style={{marginTop: \"50px\"}}>\n        <Home path=\"/\" />\n        <NewActivity path=\"/new\" />\n        <EditActivity path=\"/edit/:_id\" />\n        <SignInView path=\"/sign_in\" />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}